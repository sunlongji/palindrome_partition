public class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res=new ArrayList<List<String>>();
        if(s.length()==0)   return res;
        List<String> list=new ArrayList<String>();
        helper(s,0,s.length(),list,res);
        return res;
    }
    private void helper(String s, int start, int end, List<String> list, List<List<String>> res){
        if(start==end){
            res.add(new ArrayList(list));
            return;
        }
        for(int i=start+1;i<=end;i++){
            String cur=s.substring(start,i);
            if(isPalindrome(cur)){
               list.add(cur);
               helper(s,i,end,list,res);
               list.remove(list.size()-1);
            }
        }
    }
    private boolean isPalindrome(String s){
        int i=0, j=s.length()-1;
        while(i<j){
            if(s.charAt(i++)!=s.charAt(j--)){
                return false;
            }
        }
        return true;
    }
}
